create table employee (employee_id number primary key, first_name varchar2(50), salary number, department_id number); 
create table salary_log (log_id number generated by default as identity primary key, employee_id number, old_salary number, new_salary number, change_date date); 
insert into employee (employee_id, first_name, salary, department_id) values (101, 'john doe', 4000, 10); 
insert into employee (employee_id, first_name, salary, department_id) values (102, 'jane smith', 4500, 10); 
insert into employee (employee_id, first_name, salary, department_id) values (103, 'alice johnson', 5000, 20); 
commit; 
create or replace trigger log_salary_changes after update of salary on employees for each row begin insert into salary_log (employee_id, old_salary, new_salary, change_date) values (:old.employee_id, :old.salary, :new.salary, sysdate); end log_salary_changes; 
declare cursor emp_cursor is select employee_id, first_name, salary from employees where department_id = 10; 
v_employee_id employees.employee_id%type; 
v_first_name employees.first_name%type; 
v_salary employees.salary%type; 
begin open emp_cursor; loop fetch emp_cursor into v_employee_id, v_first_name, v_salary; exit when emp_cursor%notfound; dbms_output.put_line('employee id: ' || v_employee_id || ', name: ' || v_first_name || ', salary: ' || v_salary); end loop; close emp_cursor; end; 
update employees set salary = 5000 where employee_id = 101; 
commit; 
select * from salary_log;

create or replace trigger log_salary_changes
after update of salary
on employee
for each row
begin
    insert into salary_log (employee_id, old_salary, new_salary, change_date)
    values (:old.employee_id, :old.salary, :new.salary, sysdate);
exception
    when others then
        dbms_output.put_line('Error: ' || sqlerrm);
end log_salary_changes;
/

 UPDATE employee SET salary = 5000 WHERE employee_id = 101;



declare
    cursor emp_cursor is
        select employee_id, first_name, salary
        from employees
        where department_id = 10;
    
    v_employee_id employees.employee_id%type;
    v_first_name employees.first_name%type;
    v_salary employees.salary%type;
begin
    open emp_cursor;
    loop
        fetch emp_cursor into v_employee_id, v_first_name, v_salary;
        exit when emp_cursor%notfound;
        dbms_output.put_line('employee id: ' || v_employee_id || ', name: ' || v_first_name || ', salary: ' || v_salary);
    end loop;
    close emp_cursor;
end;
/



declare
    cursor emp_cursor is
        select employee_id, first_name, salary
        from employees
        where department_id = 10;  -- Correct column name
    
    v_employee_id employees.employee_id%type;
    v_first_name employees.first_name%type;
    v_salary employees.salary%type;
begin
    open emp_cursor;
    loop
        fetch emp_cursor into v_employee_id, v_first_name, v_salary;
        exit when emp_cursor%notfound;
        dbms_output.put_line('employee id: ' || v_employee_id || ', name: ' || v_first_name || ', salary: ' || v_salary);
    end loop;
    close emp_cursor;
end;
/

ALTER TABLE employees ADD department_id NUMBER;
