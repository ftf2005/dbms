Step 1: Create the employees Table
sql
Copy code
CREATE TABLE employees (
    employee_id NUMBER PRIMARY KEY,
    first_name VARCHAR2(50),
    salary NUMBER
);

-- Insert sample data into the employees table
INSERT INTO employees (employee_id, first_name, salary) VALUES (101, 'John Doe', 4000);
INSERT INTO employees (employee_id, first_name, salary) VALUES (102, 'Jane Smith', 4500);
INSERT INTO employees (employee_id, first_name, salary) VALUES (103, 'Alice Johnson', 5000);
COMMIT;
Step 2: Simple PL/SQL Block
sql
Copy code
DECLARE
    v_employee_name VARCHAR2(50);
BEGIN
    SELECT first_name INTO v_employee_name
    FROM employees
    WHERE employee_id = 101;
    DBMS_OUTPUT.PUT_LINE('Employee Name: ' || v_employee_name);
END;
Step 3: Procedure
sql
Copy code
CREATE OR REPLACE PROCEDURE update_salary (
    p_employee_id IN NUMBER, 
    p_new_salary IN NUMBER
)
IS
BEGIN
    UPDATE employees
    SET salary = p_new_salary
    WHERE employee_id = p_employee_id;
    DBMS_OUTPUT.PUT_LINE('Salary updated successfully for Employee ID: ' || p_employee_id);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Employee not found.');
END update_salary;
Step 4: Execute the Procedure
sql
Copy code
BEGIN
    update_salary(101, 5000);
END;
Step 5: Function
sql
Copy code
CREATE OR REPLACE FUNCTION get_employee_salary (
    p_employee_id IN NUMBER
)
RETURN NUMBER
IS
    v_salary NUMBER;
BEGIN
    SELECT salary INTO v_salary
    FROM employees
    WHERE employee_id = p_employee_id;
    RETURN v_salary;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN 0;
END get_employee_salary;
Step 6: Call the Function
sql
Copy code
DECLARE
    v_salary NUMBER;
BEGIN
    v_salary := get_employee_salary(101);
    DBMS_OUTPUT.PUT_LINE('Employee Salary: ' || v_salary);
END;
Execution Notes
Make sure to run the CREATE TABLE and INSERT statements first to set up your data.
After that, you can execute the PL/SQL blocks for the simple block, procedure, and function in your Oracle SQL environment.
Ensure that the DBMS_OUTPUT is enabled to see the output in your SQL client.
This complete set of SQL and PL/SQL code will allow you to create the necessary environment and test the examples you've provided.
